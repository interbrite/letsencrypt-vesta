#!/bin/bash
# AUTOMATE LET'S ENCRYPT CERTIFICATE INSTALLATION FOR VESTACP
#
# Copyright (C) 2015 Jason R. Pitoniak.
# This code is licensed under the MIT License.  See the LICENSE.md
# file for details.
#
# This script automates the process of requesting SSL certs through
# Let's Encrypt for VestaCP sites.  Certificates are requested with
# the primary domain as the certificate common name (CN) and all
# aliases on the domain as subject-alternate names (SAN).  The
# account owner's email address is used as the contact email sent
# with the certificate request.
#
# This script requires a working VestaCP installation and the
# separate installation of the Let's Encrypt ACME client.  See the
# README.md file for more information and installation instructions.

###### SETUP ######

# You probably won't need to change anything here unless you have
# an atypical setup or you wish to change the options used with
# the Let's Encrypt client.  If your Linux distro has a Let's
# Encrypt package available, change the LETSENCRYPT_COMMAND to
# reflect its location.

#Set the command that should be used to run the letsencrypt tool
#Include any arguments that should be used by default
#(arguments shouldn't be necessary if using /etc/letsencrypt/cli.ini)
#The -m (mail) and -d (domain) options will be added automatically

LETSENCRYPT_COMMAND='/usr/local/letsencrypt/letsencrypt-auto 
    -t --renew-by-default --agree-tos --webroot -w /etc/letsencrypt/webroot
    --server https://acme-v01.api.letsencrypt.org/directory'
#Set the path to Vesta's installation base
#(you probably won't need to cahnge this)
VESTA_PATH='/usr/local/vesta'

# Don't change anything below this line
###### END SETUP ######

if [[ $# -ne 2 ]]
then
    echo "Usage: $0 {username} {domain}"
    exit 140
fi

USER=$1
DOMAIN=$2
MAINDOM=$2
#Check that the user exists as a valid Vesta user
$VESTA_PATH/bin/v-list-user $USER >/dev/null 2>&1
if [[ $? -ne 0 ]]
then
    echo "$USER does not exist or is not a valid VestaCP user"
    exit 141
fi

#Lookup the account's email address
VESTA_USER_EMAIL=`$VESTA_PATH/bin/v-get-user-value $USER CONTACT`

#Check that the domain exists and is connected to the user's account
$VESTA_PATH/bin/v-list-web-domain $USER $DOMAIN >/dev/null 2>&1
if [[ $? -ne 0 ]]
then
    echo "Domain does not exist under $USER account"
    exit 142
fi

#Get the list of aliases for the domain

rm /tmp/domains
rm /tmp/all_domains
rm /tmp/lst_domains

$VESTA_PATH/bin/v-list-web-domains-alias $USER shell | grep $DOMAIN | cut -d " " -f2 | tr '\n' ',' | rev | cut -c 2- | rev > /tmp/domains
/usr/bin/php /usr/local/letsencrypt-vesta/domain.php
DOMAIN_LIST=`cat /tmp/all_domains`
ALIASES=`cat /tmp/lst_domains`

#Call letsencrypt
#using certonly ensures that the acme client doesn't try to install the cert for us
#as we'll do that in the next step
$LETSENCRYPT_COMMAND -m $VESTA_USER_EMAIL -d $DOMAIN_LIST certonly

#Check that the Let's Encrypt client exited successfully
#if not, something went wrong (it probably dumpped an error), so we should abort so as not to break things
if [[ $? -ne 0 ]]
then
    echo "Let's encrypt returned an error status.  Aborting."
    exit 143
fi

#Create a temp directory
TMPLOC=/var/tmp/ssl-$DOMAIN-$$
mkdir $TMPLOC

#Copy the Let's Encrypt Certs into it, using Vesta naming conventions

IFS=', ' read -r -a array <<< $ALIASES
for DOMAIN in "${array[@]}"
do
	cp /etc/letsencrypt/live/$MAINDOM/cert.pem $TMPLOC/$DOMAIN.crt
	cp /etc/letsencrypt/live/$MAINDOM/privkey.pem $TMPLOC/$DOMAIN.key
	cp /etc/letsencrypt/live/$MAINDOM/chain.pem $TMPLOC/$DOMAIN.ca
done

#Check if the site already has a cert
HAS_CERT=`$VESTA_PATH/bin/v-get-web-domain-value $USER $DOMAIN SSL`
if [[ $HAS_CERT == 'no' ]]
then
    #Configure SSL and install the cert
    $VESTA_PATH/bin/v-add-web-domain-ssl $USER $DOMAIN $TMPLOC
else
    #Replace the existing cert with the new one
    $VESTA_PATH/bin/v-change-web-domain-sslcert $USER $DOMAIN $TMPLOC
fi

IFS=', ' read -r -a array <<< $ALIASES
for DOMAIN in "${array[@]}"
do
	HAS_CERT=`$VESTA_PATH/bin/v-get-web-domain-value $USER $DOMAIN SSL`
	if [[ $HAS_CERT == 'no' ]]
	then
	    #Configure SSL and install the cert
	    $VESTA_PATH/bin/v-add-web-domain-ssl $USER $DOMAIN $TMPLOC
	else
	    #Replace the existing cert with the new one
	    $VESTA_PATH/bin/v-change-web-domain-sslcert $USER $DOMAIN $TMPLOC
	fi
done


#Remove the temp directory
rm -rf /var/tmp/ssl-$DOMAIN-$$
